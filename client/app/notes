//////////////////////////////REDUX/////////////////////////////////

seperate reducers folder
individual reducer js files
master file to combine all reducers
- import {combineReducers} from 'Redux';
- import all reducer js files
- export a wrapper object

in index js
-import react
-import {Provider} from 'react-redux';
-import {createStore} from 'Redux';
-import combined reducers file;
-import main/app js file
-const store = createStore(combined reducers js)

-reactDOM.render(
<Provider store={store}>
  <app />
</Provider
, document.getElementById('root'))


in components/containers
-import React, {Component} from 'react';
-import {bindActionCreators} from 'redux';
-import {connect} from 'react-redux';

function mapStateToProps(state){
  return{
    something: state.something
  }
}

matchDispatchProps

sets this.props.something on components to state.something

export default connect(mapStateToProps)(Component name);


////////////////////////////ROUTING/////////////////////////////////

npm install --save react-router
import {Router, Route, browserHistory, IndexRoute} from "react-router";


render () {
  return (
  <Router history = {browserHistory}>
    SINGLE ROUTE
    <Route path={"name"} component={Component} /> --> localhost:port/name/ -> Component controller

    NESTED ROUTE(S)
    <Route path={'/'} component={whatever}>
      <IndexRoute component={something} /> -> SET DEFAULT
      <Route path = .......... />
    </Route>

    ROUTE WITH PARAMETERS
    <Route path={'something/:parametername'} .... />

  </Router>
  )
}

<div>
{this.props.params} ->extract url paramaters
</div>

<div>
{this.props.children} -> where subviews live
</div>

browserHistory -> gets rid of hashes
--history-api-fallback in webpack

import {Link} from 'react-router';
<Link to={"/someroute"}></Link>
can have activeStyle and activeClassName for conditional styling

in components
import {browserHistory} from "react-router";

in component export
listener () {
  browserHistory.push('/someroute')
}

<something onClick={this.listener} />